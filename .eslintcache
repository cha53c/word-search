[{"/Users/chrischase/Dev/word-search/src/index.js":"1","/Users/chrischase/Dev/word-search/src/reportWebVitals.js":"2","/Users/chrischase/Dev/word-search/src/App.js":"3","/Users/chrischase/Dev/word-search/src/components/GridLetter.js":"4","/Users/chrischase/Dev/word-search/src/utils/gridSetup.js":"5","/Users/chrischase/Dev/word-search/src/utils/utils.js":"6","/Users/chrischase/Dev/word-search/src/utils/matching.js":"7","/Users/chrischase/Dev/word-search/src/components/PlayAgain.js":"8","/Users/chrischase/Dev/word-search/src/utils/grid.js":"9","/Users/chrischase/Dev/word-search/src/utils/populateGrid.js":"10","/Users/chrischase/Dev/word-search/src/features/words/WordsList.js":"11","/Users/chrischase/Dev/word-search/src/app/store.js":"12","/Users/chrischase/Dev/word-search/src/features/words/wordsSlice.js":"13","/Users/chrischase/Dev/word-search/src/features/grid/Grid.js":"14","/Users/chrischase/Dev/word-search/src/features/grid/gridSlice.js":"15","/Users/chrischase/Dev/word-search/src/components/Counter.js":"16","/Users/chrischase/Dev/word-search/src/components/playAgainSlice.js":"17","/Users/chrischase/Dev/word-search/src/utils/populateGridUtils.js":"18"},{"size":627,"mtime":1617523337419,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611646243558,"results":"21","hashOfConfig":"20"},{"size":1667,"mtime":1621511723647,"results":"22","hashOfConfig":"20"},{"size":940,"mtime":1621855249044,"results":"23","hashOfConfig":"20"},{"size":3618,"mtime":1622981556120,"results":"24","hashOfConfig":"20"},{"size":1586,"mtime":1622405018641,"results":"25","hashOfConfig":"20"},{"size":168,"mtime":1620053086928,"results":"26","hashOfConfig":"20"},{"size":552,"mtime":1621838935647,"results":"27","hashOfConfig":"20"},{"size":460,"mtime":1622181684222,"results":"28","hashOfConfig":"20"},{"size":6591,"mtime":1623222822090,"results":"29","hashOfConfig":"20"},{"size":548,"mtime":1620243313725,"results":"30","hashOfConfig":"20"},{"size":390,"mtime":1621854639486,"results":"31","hashOfConfig":"20"},{"size":810,"mtime":1620475415321,"results":"32","hashOfConfig":"20"},{"size":2058,"mtime":1621888046325,"results":"33","hashOfConfig":"20"},{"size":1799,"mtime":1621855660725,"results":"34","hashOfConfig":"20"},{"size":335,"mtime":1623221889730,"results":"35","hashOfConfig":"20"},{"size":449,"mtime":1621177744565,"results":"36","hashOfConfig":"20"},{"size":273,"mtime":1622969255260,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rtdojv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chrischase/Dev/word-search/src/index.js",[],["78","79"],"/Users/chrischase/Dev/word-search/src/reportWebVitals.js",[],"/Users/chrischase/Dev/word-search/src/App.js",["80","81","82","83","84","85","86","87"],"import './App.css';\n// TODO clean up unused code\nimport React, {useState} from 'react';\nimport { wordFound } from \"./features/words/wordsSlice\";\nimport Counter from \"./components/Counter\";\nimport PlayAgain from \"./components/PlayAgain\";\nimport utils from \"./utils/utils\";\nimport gridSetup from \"./utils/gridSetup\";\nimport grid from \"./utils/grid\";\nimport {WordsList} from \"./features/words/WordsList\";\nimport {Grid} from \"./features/grid/Grid\"\n\nconst rows = 5;\nconst columns = 5;\n\nconst StarsDisplay = props => (\n    <>\n        {utils.range(1, props.count).map(starId => <div key={starId} className=\"star\"/>)}\n    </>\n);\n\n\nfunction App() {\n    // const MATCHED = 'matched';\n    // const CANDIDATE = 'candidate';\n    // const AVAILABLE = 'available';\n    // const dispatch = useDispatch();\n    // const [newGame, setNewGame] = useState(true);\n    const [words, setWords] = useState(gridSetup.getWords);\n    // const [grid, setGrid] = useState(Grid.setup(rows, columns, words));\n    // console.log('grid ', grid );\n    const [foundWordIndexes, setFoundWordIndexes] = useState([]);\n\n    return (\n        <div className=\"game\">\n            <div className=\"help\">\n                Click on the letters to find the words\n            </div>\n            <div className=\"body\">\n                <div className=\"left\">\n                    <Counter />\n                    <PlayAgain onClick={grid.setup} />\n                    <WordsList />\n                </div>\n                <div className=\"right\">\n                    <Grid />\n                </div>\n            </div>\n            <div className=\"timer\">Time Remaining: 10</div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/chrischase/Dev/word-search/src/components/GridLetter.js",[],"/Users/chrischase/Dev/word-search/src/utils/gridSetup.js",[],"/Users/chrischase/Dev/word-search/src/utils/utils.js",[],"/Users/chrischase/Dev/word-search/src/utils/matching.js",[],"/Users/chrischase/Dev/word-search/src/components/PlayAgain.js",["88"],"import React from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setNewState} from \"../features/grid/gridSlice\";\nimport {Grid} from \"../features/grid/Grid\";\n\nconst PlayAgain = props => {\n    const dispatch = useDispatch();\n    const visible = useSelector(state => state.grid.gameComplete);\n    // return visible ? (<button onClick = {() => Grid.startNewGame(dispatch)}> Play Again</button>) :null;\n    return visible ? (<button onClick = {() => dispatch(setNewState())}> Play Again</button>) :null;\n};\n\nexport default PlayAgain;","/Users/chrischase/Dev/word-search/src/utils/grid.js",[],"/Users/chrischase/Dev/word-search/src/utils/populateGrid.js",["89","90"],"/Users/chrischase/Dev/word-search/src/features/words/WordsList.js",[],"/Users/chrischase/Dev/word-search/src/app/store.js",[],"/Users/chrischase/Dev/word-search/src/features/words/wordsSlice.js",[],"/Users/chrischase/Dev/word-search/src/features/grid/Grid.js",[],"/Users/chrischase/Dev/word-search/src/features/grid/gridSlice.js",["91"],"import {createSlice} from '@reduxjs/toolkit'\nimport {current} from '@reduxjs/toolkit'\nimport Grid from \"../../utils/grid\";\n\n\nconst gridSlice = createSlice({\n    name: 'grid',\n    initialState: Grid.buildNewGrid(5, 5),\n    reducers: {\n        wordFound: (state, action) => {\n            console.log('state', current(state));\n            console.log('state words ', current(state.words));\n            console.log('wordfound action', action);\n            const word = state.words.find(word => word.word === action.payload.word)\n            word.found = true;\n            console.log('false count ', state.words.filter(w => w.found === false).length);\n            if (state.words.filter(w => w.found === false).length === 0) {\n                console.log('game completed');\n                state.gameComplete = true;\n            }\n        },\n        setSelectedLetters: (state, action) => {\n            state.selectedLocations = action.payload.updatedLocations;\n        },\n        resetSelectedLetters: (state) => {\n            state.selectedLocations = [];\n            console.log('resetSelectedLetters', state.selectedLocations);\n        },\n        setNewState: (state, action) => {\n            console.log('You are setting the grid state');\n            const newGrid = Grid.buildNewGrid(5, 5);\n            state.rows = newGrid.rows;\n            state.columns = newGrid.columns;\n            state.size = newGrid.size;\n            state.letters = newGrid.letters;\n            state.gameComplete = false;\n            state.words = newGrid.words;\n            state.locationIndexes = newGrid.locationIndexes;\n            state.selectedLocations = [];\n        }\n    }\n})\n\nexport const {resetSelectedLetters, setSelectedLetters, wordFound, setNewState} = gridSlice.actions;\nexport default gridSlice.reducer;","/Users/chrischase/Dev/word-search/src/components/Counter.js",[],"/Users/chrischase/Dev/word-search/src/components/playAgainSlice.js",[],"/Users/chrischase/Dev/word-search/src/utils/populateGridUtils.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":19},{"ruleId":"96","severity":1,"message":"100","line":13,"column":7,"nodeType":"98","messageId":"99","endLine":13,"endColumn":11},{"ruleId":"96","severity":1,"message":"101","line":14,"column":7,"nodeType":"98","messageId":"99","endLine":14,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":16,"column":7,"nodeType":"98","messageId":"99","endLine":16,"endColumn":19},{"ruleId":"96","severity":1,"message":"103","line":29,"column":12,"nodeType":"98","messageId":"99","endLine":29,"endColumn":17},{"ruleId":"96","severity":1,"message":"104","line":29,"column":19,"nodeType":"98","messageId":"99","endLine":29,"endColumn":27},{"ruleId":"96","severity":1,"message":"105","line":32,"column":12,"nodeType":"98","messageId":"99","endLine":32,"endColumn":28},{"ruleId":"96","severity":1,"message":"106","line":32,"column":30,"nodeType":"98","messageId":"99","endLine":32,"endColumn":49},{"ruleId":"96","severity":1,"message":"107","line":4,"column":9,"nodeType":"98","messageId":"99","endLine":4,"endColumn":13},{"ruleId":"108","severity":1,"message":"109","line":81,"column":9,"nodeType":"110","messageId":"111","endLine":98,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":106,"column":9,"nodeType":"110","messageId":"111","endLine":161,"endColumn":10},{"ruleId":"96","severity":1,"message":"112","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":13},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'wordFound' is defined but never used.","Identifier","unusedVar","'rows' is assigned a value but never used.","'columns' is assigned a value but never used.","'StarsDisplay' is assigned a value but never used.","'words' is assigned a value but never used.","'setWords' is assigned a value but never used.","'foundWordIndexes' is assigned a value but never used.","'setFoundWordIndexes' is assigned a value but never used.","'Grid' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'utils' is defined but never used.","no-global-assign","no-unsafe-negation"]